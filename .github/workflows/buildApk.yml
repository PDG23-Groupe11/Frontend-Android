# Auto build and test, plus create APK on push on the release branch, and publish it as a GitHub release
#
### GitHub Secrets needed
# To generate the keystore, see https://developer.android.com/studio/publish/app-signing#generate-key
# - keystore : Base64 encoded keystore or path to the keystore file
# - keystore_password, key_alias, key_password : Inputed when creating the keystore
#
### GitHub variables needed
# - JAVA_VERSION, JAVA_DISTRIBUTION : self explanatory
# - ANDROID_SDK, ANDROID_BUILD_TOOLS : Android SDK version, and a compatible Android build tool version
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main", "dev", "release" ]
  pull_request:
    branches: [ "main", "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: ${{vars.JAVA_DISTRIBUTION}}
          java-version: ${{vars.JAVA_VERSION}}

        # https://github.com/amyu/setup-android
      - name: Setup Android SDK
        uses: amyu/setup-android@v2
        with:
          # default: false
          # Whether to use the cache
          cache-disabled: false

          # default: '30'
          # sdk version
          # see https://developer.android.com/studio/releases/platforms
          # It will always be installed.
          sdk-version: ${{vars.ANDROID_SDK}}

          # default: '30.0.3'
          # build tools version
          # see https://developer.android.com/studio/releases/build-tools
          # It will always be installed.
          build-tools-version: ${{vars.ANDROID_BUILD_TOOLS}}

          # default: ''
          # cmake version
          # see https://developer.android.com/studio/projects/install-ndk
          # Installed when the version is specified
          cmake-version: ''

          # default: ''
          # cmake version
          # see https://developer.android.com/studio/projects/install-ndk
          # Installed when the version is specified
          ndk-version: ''

          # default: true
          # Whether to generate or not the job summary
          generate-job-summary: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew test

        ## Skipped for non-release

      # https://github.com/TeamNecta/build-signed-apk
      - name: Build Signed APK
        if: ${{ github.ref == 'refs/heads/release' }}
        uses: TeamNecta/build-signed-apk@main
        with:
          keystore_b64: ${{ secrets.keystore }}
          keystore_password: ${{ secrets.keystore_password }}
          key_alias: ${{ secrets.key_alias }}
          key_password: ${{ secrets.key_password }}

      - name: Saving the APK
        if: ${{ github.ref == 'refs/heads/release' }}
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: app/build/outputs/apk/release/app-release.apk

  # Upload the APK as a release
  # Skipped for non-release
  release:
    runs-on: ubuntu-latest
    needs: build-test
    if: ${{ github.ref == 'refs/heads/release' }}
    permissions:
      contents: write
      pull-requests: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # Checks-out the repository. Because for reasons:tm: it's required
      - uses: actions/checkout@v3
      # https://github.com/marketplace/actions/tag-release-on-push-action
      - name: Create the release on GitHub
        id: gh-release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          tag_prefix: v

      - uses: actions/download-artifact@v3
        with:
          name: release

      - name : Upload the APK
        run:
          gh release upload ${{ steps.gh-release.outputs.version }} app-release.apk
